import Draggable from './draggable';
import { TextOptions } from './linkOptions';
import Options from './linkOptions';
export declare class Link {
    start: Draggable;
    end: Draggable;
    private get id();
    private get startLinkIndex();
    private get endLinkIndex();
    private svg;
    private path;
    private startCoords;
    private endCoords;
    private curveStartCoords;
    private curveEndCoords;
    private offsetStart;
    private offsetEnd;
    private previousStartDiff;
    private previousEndDiff;
    private previousStartSide;
    private options;
    private insertedSvg;
    private lastSideSwitchTs;
    private linkStartEl;
    private linkEndEl;
    private linkMidEl;
    private linkStartElDimensions;
    private linkEndElDimensions;
    private linkMidElDimensions;
    private events;
    forceUpdate: boolean;
    private get svgPath();
    private get hookSide();
    private get hookElements();
    get startText(): string;
    get endText(): string;
    get midText(): string;
    constructor(options?: Options);
    private initSvg;
    private initElements;
    setStartText(text: TextOptions): Promise<Link>;
    setEndText(text: TextOptions): Promise<Link>;
    setMidText(text: TextOptions): Promise<Link>;
    static initiateLink(event: PointerEvent, options?: Options, attachingLinkOptions?: Options): Promise<Link>;
    detach(): void;
    attachStart(draggable: Draggable): Promise<Link>;
    attachEnd(draggable: Draggable): Promise<Link>;
    hideLink(): Promise<unknown>;
    showLink(): Promise<unknown>;
    private hookStart;
    private hookEnd;
    private updateCoords;
    private updateCurveCoords;
    private updateSvg;
    private updateElements;
    update(): Promise<Link>;
    private updateHookElementDimensions;
    private emit;
    on(event: string, callback: (event: any) => void): void;
    off(event: string, callback: (event: any) => void): void;
    once(event: string, callback: (event: any) => void): void;
    destroy(): void;
}
export default Link;
//# sourceMappingURL=link.d.ts.map